============================================================
summary:
{'accuracy_mean': 0.6, 'accuracy_stdev': 0.09316728335245722, 'mean_tuning_time': datetime.timedelta(seconds=4, microseconds=929616), 'mean_train_time': datetime.timedelta(microseconds=5218), 'mean_predict_time': datetime.timedelta(microseconds=1035)}
{'results': {'report': {'ASD': {'precision': 0.6666666666666666, 'recall': 0.4, 'f1-score': 0.5, 'support': 15}, 'TD': {'precision': 0.55, 'recall': 0.7857142857142857, 'f1-score': 0.6470588235294117, 'support': 14}, 'accuracy': 0.5862068965517241, 'macro avg': {'precision': 0.6083333333333334, 'recall': 0.5928571428571429, 'f1-score': 0.5735294117647058, 'support': 29}, 'weighted avg': {'precision': 0.610344827586207, 'recall': 0.5862068965517241, 'f1-score': 0.5709939148073022, 'support': 29}}, 'confusion_matrix': array([[ 6,  9],
       [ 3, 11]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 2, 'weighted': True}, 'SVC': {'C': 100, 'gamma': 0.01}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7fa6574a12b0>, StandardScaler(), SVC(C=100, gamma=0.01)], 'parameter_tuning_time': datetime.timedelta(seconds=4, microseconds=943187), 'mean_train_time': datetime.timedelta(microseconds=5257), 'predict_time': datetime.timedelta(microseconds=1009)}
{'results': {'report': {'ASD': {'precision': 0.5882352941176471, 'recall': 0.7142857142857143, 'f1-score': 0.6451612903225806, 'support': 14}, 'TD': {'precision': 0.6666666666666666, 'recall': 0.5333333333333333, 'f1-score': 0.5925925925925926, 'support': 15}, 'accuracy': 0.6206896551724138, 'macro avg': {'precision': 0.6274509803921569, 'recall': 0.6238095238095238, 'f1-score': 0.6188769414575865, 'support': 29}, 'weighted avg': {'precision': 0.6288032454361054, 'recall': 0.6206896551724138, 'f1-score': 0.6179705846001731, 'support': 29}}, 'confusion_matrix': array([[10,  4],
       [ 7,  8]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 2, 'weighted': True}, 'SVC': {'C': 100, 'gamma': 0.001}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7fa6699aff40>, StandardScaler(), SVC(C=100, gamma=0.001)], 'parameter_tuning_time': datetime.timedelta(seconds=5, microseconds=14005), 'mean_train_time': datetime.timedelta(microseconds=5297), 'predict_time': datetime.timedelta(microseconds=1033)}
{'results': {'report': {'ASD': {'precision': 0.6666666666666666, 'recall': 0.7142857142857143, 'f1-score': 0.689655172413793, 'support': 14}, 'TD': {'precision': 0.7142857142857143, 'recall': 0.6666666666666666, 'f1-score': 0.689655172413793, 'support': 15}, 'accuracy': 0.6896551724137931, 'macro avg': {'precision': 0.6904761904761905, 'recall': 0.6904761904761905, 'f1-score': 0.689655172413793, 'support': 29}, 'weighted avg': {'precision': 0.6912972085385879, 'recall': 0.6896551724137931, 'f1-score': 0.6896551724137931, 'support': 29}}, 'confusion_matrix': array([[10,  4],
       [ 5, 10]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 3, 'weighted': True}, 'SVC': {'C': 500, 'gamma': 0.1}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7fa6697ea340>, StandardScaler(), SVC(C=500, gamma=0.1)], 'parameter_tuning_time': datetime.timedelta(seconds=4, microseconds=905700), 'mean_train_time': datetime.timedelta(microseconds=5181), 'predict_time': datetime.timedelta(microseconds=1030)}
{'results': {'report': {'ASD': {'precision': 0.6666666666666666, 'recall': 0.5714285714285714, 'f1-score': 0.6153846153846153, 'support': 14}, 'TD': {'precision': 0.6470588235294118, 'recall': 0.7333333333333333, 'f1-score': 0.6875, 'support': 15}, 'accuracy': 0.6551724137931034, 'macro avg': {'precision': 0.6568627450980392, 'recall': 0.6523809523809523, 'f1-score': 0.6514423076923077, 'support': 29}, 'weighted avg': {'precision': 0.656524678837052, 'recall': 0.6551724137931034, 'f1-score': 0.6526856763925729, 'support': 29}}, 'confusion_matrix': array([[ 8,  6],
       [ 4, 11]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 3, 'weighted': True}, 'SVC': {'C': 100, 'gamma': 0.01}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7fa6696dfca0>, StandardScaler(), SVC(C=100, gamma=0.01)], 'parameter_tuning_time': datetime.timedelta(seconds=4, microseconds=962435), 'mean_train_time': datetime.timedelta(microseconds=5237), 'predict_time': datetime.timedelta(microseconds=993)}
{'results': {'report': {'ASD': {'precision': 0.4166666666666667, 'recall': 0.35714285714285715, 'f1-score': 0.3846153846153846, 'support': 14}, 'TD': {'precision': 0.47058823529411764, 'recall': 0.5333333333333333, 'f1-score': 0.5, 'support': 15}, 'accuracy': 0.4482758620689655, 'macro avg': {'precision': 0.44362745098039214, 'recall': 0.4452380952380952, 'f1-score': 0.4423076923076923, 'support': 29}, 'weighted avg': {'precision': 0.44455713319810686, 'recall': 0.4482758620689655, 'f1-score': 0.44429708222811665, 'support': 29}}, 'confusion_matrix': array([[5, 9],
       [7, 8]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 5, 'weighted': True}, 'SVC': {'C': 500, 'gamma': 1}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7fa65dea63d0>, StandardScaler(), SVC(C=500, gamma=1)], 'parameter_tuning_time': datetime.timedelta(seconds=4, microseconds=822753), 'mean_train_time': datetime.timedelta(microseconds=5116), 'predict_time': datetime.timedelta(microseconds=1112)}
parameter grid:
{'SVC': {'C': [0.1, 1, 100, 500], 'gamma': [0.0001, 0.001, 0.01, 0.1, 1]}, 'DiscriminativeEdgesTransformer': {'a_label': ['ASD'], 'b_label': ['TD'], 'num_edges': [2, 3, 4, 5, 6], 'weighted': [True]}}

============================================================
