============================================================
summary:
{'accuracy_mean': 0.6441666666666667, 'accuracy_stdev': 0.1226019983523923, 'mean_tuning_time': datetime.timedelta(seconds=3, microseconds=200088), 'mean_train_time': datetime.timedelta(microseconds=2897), 'mean_predict_time': datetime.timedelta(microseconds=604)}
{'results': {'report': {'ASD': {'precision': 0.6, 'recall': 0.5, 'f1-score': 0.5454545454545454, 'support': 6}, 'TD': {'precision': 0.7272727272727273, 'recall': 0.8, 'f1-score': 0.761904761904762, 'support': 10}, 'accuracy': 0.6875, 'macro avg': {'precision': 0.6636363636363636, 'recall': 0.65, 'f1-score': 0.6536796536796536, 'support': 16}, 'weighted avg': {'precision': 0.6795454545454546, 'recall': 0.6875, 'f1-score': 0.6807359307359307, 'support': 16}}, 'confusion_matrix': array([[3, 3],
       [2, 8]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 3, 'weighted': True}, 'SVC': {'C': 500, 'gamma': 0.0001}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7fa6573f4cd0>, StandardScaler(), SVC(C=500, gamma=0.0001)], 'parameter_tuning_time': datetime.timedelta(seconds=3, microseconds=251613), 'mean_train_time': datetime.timedelta(microseconds=2959), 'predict_time': datetime.timedelta(microseconds=623)}
{'results': {'report': {'ASD': {'precision': 0.6666666666666666, 'recall': 0.3333333333333333, 'f1-score': 0.4444444444444444, 'support': 6}, 'TD': {'precision': 0.6666666666666666, 'recall': 0.8888888888888888, 'f1-score': 0.761904761904762, 'support': 9}, 'accuracy': 0.6666666666666666, 'macro avg': {'precision': 0.6666666666666666, 'recall': 0.611111111111111, 'f1-score': 0.6031746031746033, 'support': 15}, 'weighted avg': {'precision': 0.6666666666666666, 'recall': 0.6666666666666666, 'f1-score': 0.6349206349206349, 'support': 15}}, 'confusion_matrix': array([[2, 4],
       [1, 8]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 3, 'weighted': True}, 'SVC': {'C': 1, 'gamma': 1}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7fa6697de9d0>, StandardScaler(), SVC(C=1, gamma=1)], 'parameter_tuning_time': datetime.timedelta(seconds=3, microseconds=282343), 'mean_train_time': datetime.timedelta(microseconds=2955), 'predict_time': datetime.timedelta(microseconds=642)}
{'results': {'report': {'ASD': {'precision': 0.2, 'recall': 0.2, 'f1-score': 0.20000000000000004, 'support': 5}, 'TD': {'precision': 0.6, 'recall': 0.6, 'f1-score': 0.6, 'support': 10}, 'accuracy': 0.4666666666666667, 'macro avg': {'precision': 0.4, 'recall': 0.4, 'f1-score': 0.4, 'support': 15}, 'weighted avg': {'precision': 0.4666666666666667, 'recall': 0.4666666666666667, 'f1-score': 0.4666666666666667, 'support': 15}}, 'confusion_matrix': array([[1, 4],
       [4, 6]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 3, 'weighted': True}, 'SVC': {'C': 500, 'gamma': 0.0001}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7fa669a1d7c0>, StandardScaler(), SVC(C=500, gamma=0.0001)], 'parameter_tuning_time': datetime.timedelta(seconds=3, microseconds=148319), 'mean_train_time': datetime.timedelta(microseconds=2862), 'predict_time': datetime.timedelta(microseconds=591)}
{'results': {'report': {'ASD': {'precision': 1.0, 'recall': 0.4, 'f1-score': 0.5714285714285715, 'support': 5}, 'TD': {'precision': 0.7692307692307693, 'recall': 1.0, 'f1-score': 0.8695652173913044, 'support': 10}, 'accuracy': 0.8, 'macro avg': {'precision': 0.8846153846153846, 'recall': 0.7, 'f1-score': 0.7204968944099379, 'support': 15}, 'weighted avg': {'precision': 0.8461538461538463, 'recall': 0.8, 'f1-score': 0.7701863354037268, 'support': 15}}, 'confusion_matrix': array([[ 2,  3],
       [ 0, 10]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 4, 'weighted': True}, 'SVC': {'C': 100, 'gamma': 0.001}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7fa6695a85b0>, StandardScaler(), SVC(C=100, gamma=0.001)], 'parameter_tuning_time': datetime.timedelta(seconds=3, microseconds=97931), 'mean_train_time': datetime.timedelta(microseconds=2805), 'predict_time': datetime.timedelta(microseconds=563)}
{'results': {'report': {'ASD': {'precision': 0.3333333333333333, 'recall': 0.2, 'f1-score': 0.25, 'support': 5}, 'TD': {'precision': 0.6666666666666666, 'recall': 0.8, 'f1-score': 0.7272727272727272, 'support': 10}, 'accuracy': 0.6, 'macro avg': {'precision': 0.5, 'recall': 0.5, 'f1-score': 0.4886363636363636, 'support': 15}, 'weighted avg': {'precision': 0.5555555555555555, 'recall': 0.6, 'f1-score': 0.5681818181818181, 'support': 15}}, 'confusion_matrix': array([[1, 4],
       [2, 8]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 3, 'weighted': True}, 'SVC': {'C': 100, 'gamma': 0.0001}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7fa66940dd90>, StandardScaler(), SVC(C=100, gamma=0.0001)], 'parameter_tuning_time': datetime.timedelta(seconds=3, microseconds=220233), 'mean_train_time': datetime.timedelta(microseconds=2905), 'predict_time': datetime.timedelta(microseconds=600)}
parameter grid:
{'SVC': {'C': [0.1, 1, 100, 500], 'gamma': [0.0001, 0.001, 0.01, 0.1, 1]}, 'DiscriminativeEdgesTransformer': {'a_label': ['ASD'], 'b_label': ['TD'], 'num_edges': [2, 3, 4, 5, 6], 'weighted': [True]}}

============================================================
