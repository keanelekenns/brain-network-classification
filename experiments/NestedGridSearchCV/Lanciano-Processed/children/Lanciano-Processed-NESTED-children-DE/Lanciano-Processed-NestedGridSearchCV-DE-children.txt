
============================================================
summary:
{'accuracy_mean': 0.5847619047619048, 'accuracy_stdev': 0.13195073979491856, 'mean_tuning_time': datetime.timedelta(seconds=8, microseconds=739130), 'mean_train_time': datetime.timedelta(microseconds=11304), 'mean_predict_time': datetime.timedelta(microseconds=2997)}
{'results': {'report': {'ASD': {'precision': 0.5, 'recall': 0.4, 'f1-score': 0.4444444444444445, 'support': 10}, 'TD': {'precision': 0.5384615384615384, 'recall': 0.6363636363636364, 'f1-score': 0.5833333333333334, 'support': 11}, 'accuracy': 0.5238095238095238, 'macro avg': {'precision': 0.5192307692307692, 'recall': 0.5181818181818182, 'f1-score': 0.513888888888889, 'support': 21}, 'weighted avg': {'precision': 0.5201465201465202, 'recall': 0.5238095238095238, 'f1-score': 0.5171957671957672, 'support': 21}}, 'confusion_matrix': array([[4, 6],
       [4, 7]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 6}, 'SVC': {'C': 100, 'gamma': 1}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7f7375956a30>, StandardScaler(), SVC(C=100, gamma=1)], 'parameter_tuning_time': datetime.timedelta(seconds=8, microseconds=383724), 'mean_train_time': datetime.timedelta(microseconds=10830), 'predict_time': datetime.timedelta(microseconds=3037)}
{'results': {'report': {'ASD': {'precision': 1.0, 'recall': 0.5, 'f1-score': 0.6666666666666666, 'support': 10}, 'TD': {'precision': 0.6666666666666666, 'recall': 1.0, 'f1-score': 0.8, 'support': 10}, 'accuracy': 0.75, 'macro avg': {'precision': 0.8333333333333333, 'recall': 0.75, 'f1-score': 0.7333333333333334, 'support': 20}, 'weighted avg': {'precision': 0.8333333333333333, 'recall': 0.75, 'f1-score': 0.7333333333333333, 'support': 20}}, 'confusion_matrix': array([[ 5,  5],
       [ 0, 10]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 2}, 'SVC': {'C': 100, 'gamma': 0.001}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7f73763a8ee0>, StandardScaler(), SVC(C=100, gamma=0.001)], 'parameter_tuning_time': datetime.timedelta(seconds=9, microseconds=63769), 'mean_train_time': datetime.timedelta(microseconds=11712), 'predict_time': datetime.timedelta(microseconds=2881)}
{'results': {'report': {'ASD': {'precision': 0.625, 'recall': 0.5, 'f1-score': 0.5555555555555556, 'support': 10}, 'TD': {'precision': 0.5833333333333334, 'recall': 0.7, 'f1-score': 0.6363636363636365, 'support': 10}, 'accuracy': 0.6, 'macro avg': {'precision': 0.6041666666666667, 'recall': 0.6, 'f1-score': 0.595959595959596, 'support': 20}, 'weighted avg': {'precision': 0.6041666666666667, 'recall': 0.6, 'f1-score': 0.595959595959596, 'support': 20}}, 'confusion_matrix': array([[5, 5],
       [3, 7]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 3}, 'SVC': {'C': 100, 'gamma': 0.001}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7f73733eaca0>, StandardScaler(), SVC(C=100, gamma=0.001)], 'parameter_tuning_time': datetime.timedelta(seconds=8, microseconds=906160), 'mean_train_time': datetime.timedelta(microseconds=11645), 'predict_time': datetime.timedelta(microseconds=3032)}
{'results': {'report': {'ASD': {'precision': 0.7142857142857143, 'recall': 0.5, 'f1-score': 0.588235294117647, 'support': 10}, 'TD': {'precision': 0.6153846153846154, 'recall': 0.8, 'f1-score': 0.6956521739130435, 'support': 10}, 'accuracy': 0.65, 'macro avg': {'precision': 0.6648351648351649, 'recall': 0.65, 'f1-score': 0.6419437340153452, 'support': 20}, 'weighted avg': {'precision': 0.6648351648351649, 'recall': 0.65, 'f1-score': 0.6419437340153452, 'support': 20}}, 'confusion_matrix': array([[5, 5],
       [2, 8]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 6}, 'SVC': {'C': 0.1, 'gamma': 1}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7f737619b4c0>, StandardScaler(), SVC(C=0.1, gamma=1)], 'parameter_tuning_time': datetime.timedelta(seconds=8, microseconds=885574), 'mean_train_time': datetime.timedelta(microseconds=11472), 'predict_time': datetime.timedelta(microseconds=2988)}
{'results': {'report': {'ASD': {'precision': 0.2857142857142857, 'recall': 0.2222222222222222, 'f1-score': 0.25, 'support': 9}, 'TD': {'precision': 0.46153846153846156, 'recall': 0.5454545454545454, 'f1-score': 0.4999999999999999, 'support': 11}, 'accuracy': 0.4, 'macro avg': {'precision': 0.37362637362637363, 'recall': 0.3838383838383838, 'f1-score': 0.37499999999999994, 'support': 20}, 'weighted avg': {'precision': 0.38241758241758245, 'recall': 0.4, 'f1-score': 0.38749999999999996, 'support': 20}}, 'confusion_matrix': array([[2, 7],
       [5, 6]])}, 'params': {'DiscriminativeEdgesTransformer': {'a_label': 'ASD', 'b_label': 'TD', 'num_edges': 2}, 'SVC': {'C': 1, 'gamma': 0.1}}, 'trained_pipeline_steps': [<de_transformer.DiscriminativeEdgesTransformer object at 0x7f7375fd5790>, StandardScaler(), SVC(C=1, gamma=0.1)], 'parameter_tuning_time': datetime.timedelta(seconds=8, microseconds=456422), 'mean_train_time': datetime.timedelta(microseconds=10862), 'predict_time': datetime.timedelta(microseconds=3045)}
parameter grid:
{'SVC': {'C': [0.1, 1, 100, 500], 'gamma': [0.0001, 0.001, 0.01, 0.1, 1]}, 'DiscriminativeEdgesTransformer': {'a_label': ['ASD'], 'b_label': ['TD'], 'num_edges': [2, 3, 4, 5, 6]}}

============================================================
